on:
  # push:
  #   branches: [main, master]
  # pull_request:
  #   branches: [main, master]
  workflow_dispatch:

name: r-x86-exitcode-2

permissions: write-all

jobs:
  R-CMD-check:
    runs-on: windows-11-arm

    name: windows-11-arm

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5
      
      - name: Render Quarto doc using pre-installed x86_64 R 4.4.2
        run: |
          "Here 1"
          # Install R 4.5.1
          $url = "https://cran.r-project.org/bin/windows/base/R-4.5.1-win.exe"
          Invoke-WebRequest -Uri "$url" -OutFile R-x86_64.exe -UseBasicParsing -UserAgent "NativeHost"
          Start-Process -FilePath R-x86_64.exe -ArgumentList "/install /norestart /verysilent /SUPPRESSMSGBOXES" -NoNewWindow -Wait
          "R 4.5.1 instaled"

          "Here 2"
          # Install Rtools45
          $url = "https://cran.r-project.org/bin/windows/Rtools/rtools45/files/rtools45-6608-6492.exe"
          Invoke-WebRequest -Uri "$url" -OutFile rtools45.exe -UseBasicParsing -UserAgent "NativeHost"
          Start-Process -FilePath rtools45.exe -ArgumentList "/install /norestart /verysilent /SUPPRESSMSGBOXES" -NoNewWindow -Wait
          "RTools45 installed"
          
          "Here 3"
          # Add R and Rtool45 binaries to PATH
          $ENV:PATH = "C:\Program Files (x86)\R\R-4.5.1\bin\x64;C:\rtools45\usr\bin;$ENV:PATH"
          $Env:Path -split ";"
          
          # Install pandoc
          choco install pandoc --no-progress
          refreshenv

          # Install Quarto
          choco install quarto --no-progress
          refreshenv

          # Install TinyTeX
          $rscript = "Rscript"          
          # $args = "-e", "install.packages(c('tinytex'), repos = 'https://cloud.r-project.org/'); tinytex::install_tinytex(); tinytex::tlmgr_install(c('makeindex', 'upquote', 'inconsolata'))"
          # & $rscript $args

          # Add TinyTeX binaries to PATH
          # $ENV:PATH = "C:\Users\runneradmin\AppData\Roaming\TinyTeX\bin\windows;$ENV:PATH"
          
          # Install knitr and rmarkdown
          $args = "-e", "install.packages(c('knitr', 'rmarkdown'), repos = 'https://cloud.r-project.org/', type = 'source');"
          & $rscript $args
          echo $?
          
          $args = "C:\ProgramData\Chocolatey\lib\quarto\tools\share\capabilities\knitr.R"
          & $rscript $args
          echo $?

          # Render the rmarkdown document
          # $args = "-e", "rmarkdown::render('index-rmd.Rmd', output_file = 'index-rmd-r-x86.html')"
          # & $rscript $args

          # git config user.name "Tom Palmer"
          # git config user.email "remlapmot@hotmail.com"
          # git add index-rmd-r-x86.html
          # git commit -m "Update index-rmd-r-x86.html"
          # git push

      - name: Try on Git Bash
        run: |
          set +e

          # Rscript test.R
          # echo $?

          # Rscript "C:\ProgramData\Chocolatey\lib\quarto\tools\share\capabilities\knitr.R"
          # echo $?

          # Rscript test.R
          # echo $?
          
          Rscript knitr-end-newline.R
          echo $?

          Rscript -e 'requireNamespace("rmarkdown")'
          echo $?

          R -q -e 'requireNamespace("rmarkdown")'
          echo $?

          Rscript -e 'require("rmarkdown")'
          echo $?

          Rscript -e 'library("rmarkdown")'
          echo $?

        shell: bash
      # - name: Render the Quarto document
      #   run: |
      #     quarto --version
      #     quarto check knitr --log-level debug
      #     quarto render index.qmd --output index-r-x86.html

      #     # Commit and push
      #     git config user.name "Tom Palmer"
      #     git config user.email "remlapmot@hotmail.com"
      #     git add index-r-x86.html
      #     git commit -m "Update index-r-x86.html"
      #     git push
